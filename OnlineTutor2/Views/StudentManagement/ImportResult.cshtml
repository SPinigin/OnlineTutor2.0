@model OnlineTutor2.ViewModels.ImportResultViewModel
@{
    ViewData["Title"] = "Результат импорта";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="fas fa-flag-checkered text-success"></i> Импорт завершен</h2>
        <p class="text-muted">Результаты импорта учеников из Excel файла</p>
    </div>
    <div>
        <a asp-action="Index" class="btn btn-primary">
            <i class="fas fa-list"></i> К списку учеников
        </a>
    </div>
</div>


<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center border-primary">
            <div class="card-body">
                <i class="fas fa-list text-primary" style="font-size: 2rem;"></i>
                <h4 class="mt-2 text-primary">@Model.TotalRows</h4>
                <p class="text-muted mb-0">Всего обработано</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center border-success">
            <div class="card-body">
                <i class="fas fa-check-circle text-success" style="font-size: 2rem;"></i>
                <h4 class="mt-2 text-success">@Model.SuccessfulImports</h4>
                <p class="text-muted mb-0">Успешно</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center border-danger">
            <div class="card-body">
                <i class="fas fa-times-circle text-danger" style="font-size: 2rem;"></i>
                <h4 class="mt-2 text-danger">@Model.FailedImports</h4>
                <p class="text-muted mb-0">С ошибками</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center border-info">
            <div class="card-body">
                <i class="fas fa-percentage text-info" style="font-size: 2rem;"></i>
                <h4 class="mt-2 text-info">
                    @(Model.TotalRows > 0 ? Math.Round((double)Model.SuccessfulImports / Model.TotalRows * 100, 1) : 0)%
                </h4>
                <p class="text-muted mb-0">Успешность</p>
            </div>
        </div>
    </div>
</div>

@if (Model.SuccessfulImports > 0)
{
    
    <div class="card border-success mb-4">
        <div class="card-header bg-success text-white">
            <h5 class="mb-0">
                <i class="fas fa-check-circle"></i> Успешно импортированы (@Model.SuccessfulImports)
            </h5>
        </div>
        <div class="card-body">
            @if (Model.SuccessfulRows.Any())
            {
                <div class="alert alert-success">
                    <i class="fas fa-info-circle"></i>
                    <strong>Отлично!</strong> Ученики были добавлены в систему и могут войти используя свои email и пароли.
                </div>
                
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>ФИО</th>
                                <th>Email</th>
                                <th>Пароль</th>
                                <th>Школа</th>
                                <th>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model.SuccessfulRows.Take(10))
                            {
                                <tr>
                                    <td>@student.FirstName @student.LastName</td>
                                    <td>@student.Email</td>
                                    <td><code class="small">@student.Password</code></td>
                                    <td>@student.School</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-primary" 
                                                onclick="copyToClipboard('@student.Email', '@student.Password')">
                                            <i class="fas fa-copy"></i> Копировать данные
                                        </button>
                                    </td>
                                </tr>
                            }
                            @if (Model.SuccessfulRows.Count > 10)
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-muted">
                                        ... и еще @(Model.SuccessfulRows.Count - 10) учеников
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                
                <div class="mt-3">
                    <button type="button" class="btn btn-outline-success" onclick="exportSuccessfulData()">
                        <i class="fas fa-download"></i> Экспортировать данные для отправки ученикам
                    </button>
                </div>
            }
        </div>
    </div>
}

@if (Model.FailedImports > 0)
{
    
    <div class="card border-danger">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0">
                <i class="fas fa-exclamation-triangle"></i> Ошибки импорта (@Model.FailedImports)
            </h5>
        </div>
        <div class="card-body">
            <div class="alert alert-warning">
                <i class="fas fa-info-circle"></i>
                <strong>Внимание!</strong> Следующие записи не были импортированы из-за ошибок. 
                Исправьте данные и повторите импорт.
            </div>
            
            <div class="table-responsive">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Строка</th>
                            <th>ФИО</th>
                            <th>Email</th>
                            <th>Ошибки</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model.FailedRows)
                        {
                            <tr>
                                <td>@student.RowNumber</td>
                                <td>@student.FirstName @student.LastName</td>
                                <td>@student.Email</td>
                                <td>
                                    @foreach (var error in student.Errors)
                                    {
                                        <span class="badge bg-danger me-1">@error</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<div class="card mt-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-tasks"></i> Следующие шаги
        </h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h6><i class="fas fa-check text-success"></i> Что сделано:</h6>
                <ul>
                    <li>Ученики добавлены в систему</li>
                    <li>Созданы учетные записи</li>
                    <li>Назначены роли "Студент"</li>
                    @if (Model.SuccessfulImports > 0)
                    {
                        <li>Сгенерированы пароли доступа</li>
                    }
                </ul>
            </div>
            <div class="col-md-6">
                <h6><i class="fas fa-arrow-right text-info"></i> Что нужно сделать:</h6>
                <ul>
                    <li>Назначить учеников в классы (если не сделано)</li>
                    <li>Отправить данные доступа ученикам</li>
                    <li>Создать тесты и материалы</li>
                    <li>Начать обучение</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/layout.js" asp-append-version="true"></script>
    <script>
        function copyToClipboard(email, password) {
            const text = `Email: ${email}\nПароль: ${password}`;
            navigator.clipboard.writeText(text).then(function() {
                // Создаем временное уведомление
                const toast = document.createElement('div');
                toast.className = 'position-fixed top-0 end-0 p-3';
                toast.style.zIndex = '1050';
                toast.innerHTML = `
                    <div class="toast show" role="alert">
                        <div class="toast-header">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            <strong class="me-auto">Скопировано</strong>
                            <button type="button" class="btn-close" onclick="this.closest('.position-fixed').remove()"></button>
                        </div>
                        <div class="toast-body">
                            Данные ученика скопированы в буфер обмена
                        </div>
                    </div>
                `;
                document.body.appendChild(toast);
                
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.remove();
                    }
                }, 3000);
            });
        }

        function exportSuccessfulData() {
            // Создаем CSV данные
            let csvContent = "ФИО,Email,Пароль,Школа,Класс\n";
            
            @foreach (var student in Model.SuccessfulRows)
            {
                <text>
                csvContent += "@($"{student.FirstName} {student.LastName}"),@student.Email,@student.Password,@(student.School ?? ""),@(student.Grade?.ToString() ?? "")\n";
                </text>
            }
            
            // Создаем и скачиваем файл
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'импортированные_ученики.csv';
            link.click();
        }
    </script>
}
