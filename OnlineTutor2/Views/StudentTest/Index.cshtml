@model OnlineTutor2.ViewModels.StudentTestIndexViewModel
@{
    ViewData["Title"] = "Доступные тесты";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="fas fa-tasks text-primary"></i> Доступные тесты</h2>
        @if (Model.Student.Class != null)
        {
            <p class="text-muted">Класс: <strong>@Model.Student.Class.Name</strong></p>
        }
    </div>
    <div>
        <a asp-action="History" class="btn btn-outline-info">
            <i class="fas fa-history"></i> История прохождения
        </a>
    </div>
</div>

@if (!Model.AvailableTests.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-tasks text-muted" style="font-size: 4rem;"></i>
        <h4 class="mt-3 text-muted">Нет доступных тестов</h4>
        <p class="text-muted">В данный момент нет тестов, доступных для прохождения</p>
    </div>
}
else
{
    <div class="row">
        @foreach (var test in Model.AvailableTests)
        {
            var studentResults = test.TestResults.Where(tr => tr.StudentId == Model.Student.Id).ToList();
            var completedResults = studentResults.Where(tr => tr.IsCompleted).ToList();
            var ongoingResult = studentResults.FirstOrDefault(tr => !tr.IsCompleted);
            var attemptsUsed = studentResults.Count;
            var canStart = attemptsUsed < test.MaxAttempts && ongoingResult == null;
            var bestResult = completedResults.OrderByDescending(tr => tr.Percentage).FirstOrDefault();

            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="card-title mb-0">
                                <i class="fas fa-spell-check text-primary"></i> @test.Title
                            </h6>
                            @if (bestResult != null)
                            {
                                <span class="badge bg-@(bestResult.Percentage >= 80 ? "success" : bestResult.Percentage >= 60 ? "warning" : "danger")">
                                    @bestResult.Percentage.ToString("F1")%
                                </span>
                            }
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        @if (!string.IsNullOrEmpty(test.Description))
                        {
                            <p class="card-text text-muted small">@test.Description</p>
                        }

                        <div class="row text-center mb-3">
                            <div class="col-4">
                                <div class="d-flex flex-column">
                                    <span class="h6 text-primary mb-0">@test.Questions.Count</span>
                                    <small class="text-muted">вопросов</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="d-flex flex-column">
                                    <span class="h6 text-info mb-0">@test.TimeLimit</span>
                                    <small class="text-muted">минут</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="d-flex flex-column">
                                    <span class="h6 text-warning mb-0">@attemptsUsed/@test.MaxAttempts</span>
                                    <small class="text-muted">попыток</small>
                                </div>
                            </div>
                        </div>

                        @if (completedResults.Any())
                        {
                            <div class="mb-3">
                                <h6 class="small">Результаты:</h6>
                                @foreach (var result in completedResults.OrderByDescending(r => r.CompletedAt).Take(3))
                                {
                                    <div class="d-flex justify-content-between small">
                                        <span>Попытка @result.AttemptNumber:</span>
                                        <span class="badge bg-@(result.Percentage >= 80 ? "success" : result.Percentage >= 60 ? "warning" : "danger")">
                                            @result.Percentage.ToString("F1")%
                                        </span>
                                    </div>
                                }
                            </div>
                        }

                        <div class="mt-auto">
                            @if (test.StartDate.HasValue)
                            {
                                <small class="text-muted d-block">
                                    <i class="fas fa-play"></i> Начало: @test.StartDate.Value.ToString("dd.MM.yyyy HH:mm")
                                </small>
                            }
                            @if (test.EndDate.HasValue)
                            {
                                <small class="text-muted d-block">
                                    <i class="fas fa-stop"></i> Окончание: @test.EndDate.Value.ToString("dd.MM.yyyy HH:mm")
                                </small>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        @if (ongoingResult != null)
                        {
                            <a asp-action="Take" asp-route-id="@ongoingResult.Id" class="btn btn-warning w-100">
                                <i class="fas fa-play"></i> Продолжить тест
                            </a>
                        }
                        else if (canStart)
                        {
                            <button type="button" class="btn btn-success w-100"
                                    onclick="confirmStartTest(@test.Id, '@test.Title', @test.TimeLimit)">
                                <i class="fas fa-play"></i> Начать тест
                            </button>
                        }
                        else if (attemptsUsed >= test.MaxAttempts)
                        {
                            <button type="button" class="btn btn-secondary w-100" disabled>
                                <i class="fas fa-ban"></i> Попытки исчерпаны
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-secondary w-100" disabled>
                                <i class="fas fa-clock"></i> Недоступен
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

<div class="modal fade" id="confirmStartModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-play text-success"></i> Начать тест
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    <strong>Внимание!</strong> После начала теста у вас будет ограниченное время на выполнение.
                </div>
                <p>Тест: <strong id="testTitle"></strong></p>
                <p>Время на выполнение: <strong id="testTime"></strong> минут</p>
                <p class="text-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    Убедитесь, что у вас есть стабильное интернет-соединение и достаточно времени.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Отмена
                </button>
                <a id="startTestButton" href="#" class="btn btn-success">
                    <i class="fas fa-play"></i> Начать тест
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmStartTest(testId, testTitle, timeLimit) {
            document.getElementById('testTitle').textContent = testTitle;
            document.getElementById('testTime').textContent = timeLimit;
            document.getElementById('startTestButton').href = '@Url.Action("Start")/' + testId;

            const modal = new bootstrap.Modal(document.getElementById('confirmStartModal'));
            modal.show();
        }
    </script>
}
