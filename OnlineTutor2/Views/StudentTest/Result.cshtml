@model object
@{
    ViewData["Title"] = "Результат теста";

    var isSpellingResult = Model is OnlineTutor2.Models.SpellingTestResult;
    var isPunctuationResult = Model is OnlineTutor2.Models.PunctuationTestResult;
    var isOrthoeopyResult = Model is OnlineTutor2.Models.OrthoeopyTestResult;

    // Получаем данные в зависимости от типа
    var percentage = 0.0;
    var score = 0;
    var maxScore = 0;
    var attemptNumber = 0;
    var completedAt = DateTime.Now;
    var startedAt = DateTime.Now;
    var testTitle = "";
    var questionsCount = 0;
    var correctAnswersCount = 0;
    var incorrectAnswersCount = 0;
    var showCorrectAnswers = false;
    var testId = 0;
    var maxAttempts = 0;

    if (isSpellingResult)
    {
        var result = Model as OnlineTutor2.Models.SpellingTestResult;
        percentage = result.Percentage;
        score = result.Score;
        maxScore = result.MaxScore;
        attemptNumber = result.AttemptNumber;
        completedAt = result.CompletedAt ?? DateTime.Now;
        startedAt = result.StartedAt;
        testTitle = result.SpellingTest.Title;
        questionsCount = result.SpellingTest.Questions.Count;
        correctAnswersCount = result.Answers.Count(a => a.IsCorrect);
        incorrectAnswersCount = result.Answers.Count(a => !a.IsCorrect);
        showCorrectAnswers = result.SpellingTest.ShowCorrectAnswers;
        testId = result.SpellingTestId;
        maxAttempts = result.SpellingTest.MaxAttempts;
    }
    else if (isPunctuationResult)
    {
        var result = Model as OnlineTutor2.Models.PunctuationTestResult;
        percentage = result.Percentage;
        score = result.Score;
        maxScore = result.MaxScore;
        attemptNumber = result.AttemptNumber;
        completedAt = result.CompletedAt ?? DateTime.Now;
        startedAt = result.StartedAt;
        testTitle = result.PunctuationTest.Title;
        questionsCount = result.PunctuationTest.Questions.Count;
        correctAnswersCount = result.Answers.Count(a => a.IsCorrect);
        incorrectAnswersCount = result.Answers.Count(a => !a.IsCorrect);
        showCorrectAnswers = result.PunctuationTest.ShowCorrectAnswers;
        testId = result.PunctuationTestId;
        maxAttempts = result.PunctuationTest.MaxAttempts;
    }
    else if (isOrthoeopyResult)
    {
        var result = Model as OnlineTutor2.Models.OrthoeopyTestResult;
        percentage = result.Percentage;
        score = result.Score;
        maxScore = result.MaxScore;
        attemptNumber = result.AttemptNumber;
        completedAt = result.CompletedAt ?? DateTime.Now;
        startedAt = result.StartedAt;
        testTitle = result.OrthoeopyTest.Title;
        questionsCount = result.OrthoeopyTest.Questions.Count;
        correctAnswersCount = result.Answers.Count(a => a.IsCorrect);
        incorrectAnswersCount = result.Answers.Count(a => !a.IsCorrect);
        showCorrectAnswers = result.OrthoeopyTest.ShowCorrectAnswers;
        testId = result.OrthoeopyTestId;
        maxAttempts = result.OrthoeopyTest.MaxAttempts;
    }
}



@if (showCorrectAnswers)
{
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-list-alt"></i> Детальные результаты
            </h5>
        </div>
        <div class="card-body">
            @if (isSpellingResult)
            {

            }
            else if (isPunctuationResult)
            {

            }
            else if (isOrthoeopyResult)
            {
                var orthoeopyResult = Model as OnlineTutor2.Models.OrthoeopyTestResult;
                @foreach (var question in orthoeopyResult.OrthoeopyTest.Questions.OrderBy(q => q.OrderIndex))
                {
                    var answer = orthoeopyResult.Answers.FirstOrDefault(a => a.OrthoeopyQuestionId == question.Id);
                    var isCorrect = answer?.IsCorrect ?? false;

                    <div class="question-result mb-4 p-3 border rounded">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="d-flex align-items-center mb-2">
                                    <span class="badge bg-@(isCorrect ? "success" : "danger") me-2">
                                        @(orthoeopyResult.OrthoeopyTest.Questions.OrderBy(q => q.OrderIndex).ToList().IndexOf(question) + 1)
                                    </span>
                                    <h6 class="mb-0">Выберите правильное ударение</h6>
                                </div>

                                <div class="mb-3">
                                    <small class="text-muted">Слово:</small>
                                    <div class="p-2 bg-light rounded">
                                        <span class="h5">@question.Word</span>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <small class="text-muted">Ваш ответ:</small>
                                        <div class="fw-bold text-@(isCorrect ? "success" : "danger")">
                                            @if (answer?.SelectedStressPosition.HasValue == true)
                                            {
                                                <span>Ударение на @answer.SelectedStressPosition слог</span>
                                            }
                                            else
                                            {
                                                <span>Не отвечено</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <small class="text-muted">Правильный ответ:</small>
                                        <div class="fw-bold text-success">
                                            <span class="h5">@question.WordWithStress</span>
                                            <br>
                                            <small>(ударение на @question.StressPosition слог)</small>
                                        </div>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(question.Hint))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">Подсказка:</small>
                                        <div class="small">@question.Hint</div>
                                    </div>
                                }
                            </div>
                            <div class="col-md-4 text-end">
                                <div class="result-icon">
                                    @if (isCorrect)
                                    {
                                        <i class="fas fa-check-circle text-success fa-2x"></i>
                                        <div class="mt-1">
                                            <span class="badge bg-success">+@question.Points баллов</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle text-danger fa-2x"></i>
                                        <div class="mt-1">
                                            <span class="badge bg-danger">0 баллов</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}


<div class="card mt-4">
    <div class="card-body text-center">
        <div class="btn-group" role="group">
            <a asp-action="Index" class="btn btn-primary">
                <i class="fas fa-list"></i> К списку тестов
            </a>
            <a asp-action="History" class="btn btn-outline-info">
                <i class="fas fa-history"></i> История результатов
            </a>
            @if (attemptNumber < maxAttempts)
            {
                @if (isSpellingResult)
                {
                    <a asp-action="StartSpelling" asp-route-id="@testId" class="btn btn-outline-success">
                        <i class="fas fa-redo"></i> Пройти еще раз
                    </a>
                }
                else if (isPunctuationResult)
                {
                    <a asp-action="StartPunctuation" asp-route-id="@testId" class="btn btn-outline-success">
                        <i class="fas fa-redo"></i> Пройти еще раз
                    </a>
                }
                else if (isOrthoeopyResult)
                {
                    <a asp-action="StartOrthoepy" asp-route-id="@testId" class="btn btn-outline-success">
                        <i class="fas fa-redo"></i> Пройти еще раз
                    </a>
                }
            }
        </div>
    </div>
</div>


@section Styles {
    <style>
        .question-result {
            transition: all 0.3s ease;
        }

            .question-result:hover {
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

        .result-icon {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
        }
    </style>
}

@section Scripts {
    <script src="~/js/layout.js" asp-append-version="true"></script>
}
